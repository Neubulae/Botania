plugins {
    id 'fabric-loom' version '0.5-SNAPSHOT'
    id 'maven-publish'
}


sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8


ext.configFile = file('build.properties')
ext.config = parseConfig(configFile)
ext.priv = parseConfig(file('private.properties'))

def mc_version = "1.16.5"
version = "${mc_version}-${config.build_number}-FABRIC"
if (System.getenv().RELEASE_MODE == null) {
    version += '-SNAPSHOT'
}

group = "vazkii.botania"
archivesBaseName = "${ext.config.mod_name}"

compileJava.options.compilerArgs << "-Xlint:all,-classfile,-processing,-deprecation" << "-Werror"

minecraft {
    accessWidener "src/main/resources/botania.accesswidener"
}

sourceSets.main.resources {
    srcDir 'src/generated/resources'
}

repositories {
    maven {
        name = "Modmuss"
        url = "https://maven.modmuss50.me/"
    }
    maven {
        name = "Jared"
        url = "https://maven.blamejared.com/"
    }
    maven {
        name "curios"
        url = "https://maven.theillusivec4.top/"
    }
    maven {
          name = "Ladysnake Libs"
          url = 'https://ladysnake.jfrog.io/artifactory/mods'
    }
    maven {
        name = "BuildCraft" // for LBA
        url = "https://mod-buildcraft.com/maven"
    }
    maven {
        name "entity reach"
        url "https://maven.jamieswhiteshirt.com/libs-release/"
    }
    maven {
        url "https://jitpack.io" // for step height eam
    }
    maven {
        url "https://maven.siphalor.de" // for nbt crafting
    }
    maven {
        url "https://maven.shedaniel.me/" // for rei
    }
}

test {
    useJUnitPlatform()
}

dependencies {
    compileOnly "com.google.code.findbugs:jsr305:3.0.2"

    modImplementation "vazkii.patchouli:Patchouli:1.16.4-52-FABRIC-SNAPSHOT"
    modImplementation "me.shedaniel:RoughlyEnoughItems:5.12.235"

    modCompile "alexiil.mc.lib:libblockattributes-all:0.8.4"

    modImplementation "me.zeroeightsix:fiber:0.23.0-2"
    include "me.zeroeightsix:fiber:0.23.0-2"

    // Don't include base and entity as curios includes it already
    modImplementation "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-base:2.8.3"
    modImplementation "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-entity:2.8.3"

    modImplementation "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-block:2.8.3"
    include "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-block:2.8.3"

    compileOnly "com.demonwav.mcdev:annotations:1.0" // only to shut up compile warnings from CCA's usage of CheckEnv and Env

    modImplementation "top.theillusivec4.curios:curios-fabric:0.0.13-1.16.5"

    modImplementation "com.jamieswhiteshirt:reach-entity-attributes:1.0.1"
    include "com.jamieswhiteshirt:reach-entity-attributes:1.0.1"

    modImplementation "com.github.emilyploszaj:step-height-entity-attribute:v1.0.1"
    include "com.github.emilyploszaj:step-height-entity-attribute:v1.0.1"

    modImplementation "de.siphalor:nbtcrafting-1.16:2+"

    minecraft "com.mojang:minecraft:${mc_version}"
    mappings "net.fabricmc:yarn:${mc_version}+build.9:v2"
    modCompile "net.fabricmc:fabric-loader:0.11.3"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modCompile "net.fabricmc.fabric-api:fabric-api:0.34.6+1.16"

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.1'
    // PSA: Some older mods, compiled on Loom 0.2.1, might have outdated Maven POMs.
    // You may need to force-disable transitiveness on them.
}


processResources {
    inputs.property "version", project.version

    from(sourceSets.main.resources.srcDirs) {
        include "fabric.mod.json"
        expand "version": project.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "fabric.mod.json"
    }

    // Exclude datagenerator .cache directory
    exclude '.cache'

    filesMatching('data/botania/patchouli_books/lexicon/book.json') {
        filter {
            it.replaceAll("buildNumber", config.build_number)
        }
    }
}

task incrementBuildNumber {
    doFirst {
        config.build_number = (config.build_number.toString().toInteger()) + 1
        configFile.withWriter {
            config.toProperties().store(it, "")
        }
    }
}

def parseConfig(File config) {
	if(config.exists()){
		config.withReader {
			def prop = new Properties()
			prop.load(it)
			return (new ConfigSlurper().parse(prop))
		}
	} else {
		return null
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

jar {
    from "LICENSE"

    exclude "**/*.bat"
    exclude "**/*.psd"
    exclude "**/*.exe"
}

task apiJar(type: Jar, dependsOn: classes) {
    from(sourceSets.main.output)
    include 'vazkii/botania/api/**'

    classifier = "api"
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
            artifact(apiJar) {
                builtBy apiJar
            }
        }
    }

    // select the repositories you want to publish to
    repositories {
        maven {
            url "file://" + System.getenv("local_maven")
        }
    }
}

defaultTasks 'clean', 'checkSyntax', 'build'
